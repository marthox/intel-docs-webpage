---
import { client } from "@utils/contentful_utils";
import { documentToHtmlString } from "@contentful/rich-text-html-renderer";
import { getLangFromUrl } from "@i18n/utils";
import "dotenv/config";
import "@styles/richText.css";
import "@styles/ReactiveForm.css";

const { id } = Astro.props;

const lang = getLangFromUrl(Astro.url);

const data = await client.getEntry(id, { locale: lang });
const formTitle = data.fields.formTitle;
const formDescription = data.fields.formDescription as any;

const embeddedForm = data.fields.embeddedForm;
const formFields = data?.fields?.formFields || ([] as any);
---

<div class="form-container">
    <div class="rich-text-content">
        <h1>{formTitle}</h1>
        <Fragment set:html={documentToHtmlString(formDescription)} />
    </div>
    {
        embeddedForm ? (
            <Fragment set:html={embeddedForm} />
        ) : (
            <form
                class="reactiveform"
                data-netlify="true"
                action={`/${lang}/thank-you`}
            >
                {formFields.map((data: any) => {
                    const fields = data.fields;
                    const { id, type, text, placeholder, required } = fields;
                    return (
                        <div id={id}>
                            <label for={id}>{text}</label>
                            <input
                                type={type}
                                id={id}
                                name={id}
                                placeholder={placeholder}
                                required={required}
                            />
                        </div>
                    );
                })}

                <button type="submit">Submit</button>
            </form>
        )
    }
</div>

<style>
    .form-container {
        display: grid;
        grid-template-columns: 1fr 1fr;
        border-radius: 1em;
        gap: 1rem;
    }

    .rich-text-content {
        display: flex;
        flex-direction: column;
    }

    @media (max-width: 768px) {
        .form-container {
            padding: 20px;
            grid-template-columns: 1fr;
        }
    }
</style>
